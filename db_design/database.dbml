Project Logistix {
  database_type: 'MySQL'
  Note: '''
    # Logistix project database schema
  '''
}

Table users as U {
  id varchar(255) [pk]
  first_name varchar(30)
  last_name varchar(30)
  email varchar(30) [not null, unique]
  password_hash varchar(255)
  address_id varchar(255) [ref: - address.id]
  created_at timestamp [default: `now()`, not null]
  updated_at timestamp [default: `now()`, not null]
  note: "table 'users' contains user information"

  indexes {
    (email, first_name, last_name) [unique]
    created_at, 
    updated_at
    (id, created_at, updated_at)   [unique]
  }
}

Table address as UA {
  id varchar(255) [pk]
  address varchar(255) [not null]
  state varchar(255) [not null]
  city varchar(255) [not null]
  country_code int [not null]
  postal_code varchar(20) 
  created_at timestamp [default: `now()`, not null]
  updated_at timestamp [default: `now()`, not null]
  note: "table 'users_address' contains user address information"

  indexes {
    (country_code, postal_code)
    (state, city)
  }
}

Enum package_status {
  pending
  shipped
  delivered
  cancelled
  returned
  lost
}

Table packages as P {
  id varchar(255) [pk, increment] 
  user_id varchar(255) [not null, ref: < users.id]
  name varchar(255) [not null] 
  weight int [not null, note: "weight in grams"]
  pickup_location_id varchar(255) [not null, ref: > address.id]
  pickup_date datetime [not null]
  status package_status [default: 'pending', not null] 
  created_at timestamp [default: `now()`, not null] 
  updated_at timestamp [default: `now()`, not null]

  indexes {
    (user_id, status, pickup_date)
    (user_id, updated_at, status)
    (id, weight)
    pickup_location_id 
    pickup_date
    (id, created_at) [unique]
  }
}

Table packages_histories {
  package_id varchar(255) [ref: <> packages.id]
  package_history_id varchar(255) [ref: <> package_history.id]
}

Table package_history as PH {
  id varchar(255) [pk] 
  location_id varchar(255) [ref: - address.id]
  status package_status [default: 'pending', not null]
  created_at timestamp [default: `now()`, not null]
  updated_at timestamp [default: `now()`, not null]

  indexes {
    (location_id, status)
    created_at 
    updated_at
  }
}
